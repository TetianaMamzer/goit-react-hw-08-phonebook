{"version":3,"file":"static/js/548.4192803a.chunk.js","mappings":"oLACA,MAAwB,sBAAxB,EAAqD,qBAArD,EAAmF,uBAAnF,EAAoH,wB,8BCwBpH,EAvBc,CACZ,CACEA,IAAIC,EAAAA,EAAAA,MACJC,KAAM,WACNC,KAAM,YACNC,SAAS,GAGX,CACEJ,IAAIC,EAAAA,EAAAA,MACJC,KAAM,QACNC,KAAM,SACNC,SAAS,GAGX,CACEJ,IAAIC,EAAAA,EAAAA,MACJC,KAAM,WACNC,KAAM,YACNC,SAAS,I,UCpBb,EAA0B,4BAA1B,EAA6D,yBAA7D,EAA+F,2B,mBCmB/F,EAfmB,WACjB,IAAMC,GAAWC,EAAAA,EAAAA,MAKjB,GAAsBC,EAAAA,EAAAA,IAAYC,EAAAA,IAA3BC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAEb,OACE,iBAAKC,UAAWC,EAAhB,WACE,gBAAID,UAAWC,EAAf,UAA0BH,EAA1B,KAAkCC,MAAW,mBAAQG,QAPxC,WACfR,GAASS,EAAAA,EAAAA,MACV,EAK2EH,UAAWC,EAAtC,sBAGlD,ECRKG,EAAW,YAAmB,IAAhBA,EAAe,EAAfA,SAClB,OAAOA,EAAQ,UAAMH,EAAN,YAAkBA,GAAeA,CACjD,EAwBD,EAvBe,WACb,IAAMI,GAAUT,EAAAA,EAAAA,IAAYU,EAAAA,IAC9BC,QAAQC,IAAIC,GACV,IAKMC,GALiBL,EAInBI,EAAAA,QAAa,SAAEE,GAAF,OAAYA,EAAKlB,OAAjB,IAHbgB,EAAAA,QAAa,SAAEE,GAEf,OADAJ,QAAQC,IAAIG,EAAKlB,UACTkB,EAAKlB,OAAQ,KAEMmB,KAAI,gBAAGvB,EAAH,EAAGA,GAAIE,EAAP,EAAOA,KAAMC,EAAb,EAAaA,KAAb,OACjC,yBACE,SAAC,KAAD,CAASqB,GAAIrB,EAAMQ,UAAWI,EAA9B,SACGb,KAFIF,EADwB,IAOnC,OACE,iCACIgB,IAAW,gBAAIL,UAAWC,EAAf,UAA2BS,EAA3B,OACZL,IAAW,iBAAKL,UAAWC,EAAhB,WAA6B,gBAAID,UAAWC,EAAf,UAA2BS,EAA3B,OAA7B,KAAwE,SAAC,EAAD,SAGzF,C,wDCjCM,IAkBIpB,EAAS,eAACwB,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAAC7B,EAAI8B,GAWvD,OARE9B,IAFF8B,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["webpack://react-homework-template/./src/navbar/NavbarAuth/navbar.module.css?c48a","navbar/NavbarAuth/items.js","webpack://react-homework-template/./src/navbar/NavbarUser/navbarUser.module.css?ce93","navbar/NavbarUser/NavbarUser.js","navbar/NavbarAuth/Navbar.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"group\":\"navbar_group__BztRc\",\"list\":\"navbar_list__QFQ3z\",\"active\":\"navbar_active__4b0lz\",\"wrapper\":\"navbar_wrapper__T+WgC\"};","import { nanoid } from \"nanoid\";\n\nconst items = [\n  {\n    id: nanoid(),\n    text: \"Register\",\n    link: \"/register\",\n    private: false,\n  },\n\n  {\n    id: nanoid(),\n    text: \"Login\",\n    link: \"/login\",\n    private: false,\n  },\n\n  {\n    id: nanoid(),\n    text: \"Contacts\",\n    link: \"/contacts\",\n    private: true,\n  },\n];\n\nexport default items;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"navbarUser_wrapper__NNB8o\",\"name\":\"navbarUser_name__ety4V\",\"button\":\"navbarUser_button__6rIpN\"};","import css from './navbarUser.module.css'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getUser } from 'redux/auth/auth-selectors';\nimport { logout } from 'redux/auth/auth-operations';\n\nconst NavbarUser = () => {\n  const dispatch = useDispatch();\n\n  const onLogout = () => {\n    dispatch(logout());\n  }\n  const {name, email} = useSelector(getUser);\n\n  return (\n    <div className={css.wrapper}>\n      <h2 className={css.name}>{name}, {email}</h2><button onClick={onLogout} className={css.button}>Logout</button>\n    </div>\n  )\n}\n\nexport default NavbarUser;","\nimport css from './navbar.module.css';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport items from './items';\n\nimport { isUserLogin } from 'redux/auth/auth-selectors';\n\nimport NavbarUser from 'navbar/NavbarUser/NavbarUser';\n\nconst isActive = ({ isActive }) => {\n  return isActive ? `${css.list} ${css.active}` : css.list;\n};\nconst Navbar = () => {\n  const isLogin = useSelector(isUserLogin);\nconsole.log(items)\n  const filteredItems = !isLogin\n    ? items.filter(( item) => {\n      console.log(item.private)\n      return !item.private})\n    : items.filter(( item ) => item.private);\n  const elements = filteredItems.map(({ id, text, link }) => (\n    <li key={id}>\n      <NavLink to={link} className={isActive}>\n        {text}\n      </NavLink>\n    </li>\n  ));\n  return (\n    <>\n      {!isLogin && <ul className={css.group}>{elements} </ul>}\n      {isLogin && <div className={css.wrapper}><ul className={css.group}>{elements} </ul> <NavbarUser/></div>}\n    </>\n  );\n};\n\nexport default Navbar;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["id","nanoid","text","link","private","dispatch","useDispatch","useSelector","getUser","name","email","className","css","onClick","logout","isActive","isLogin","isUserLogin","console","log","items","elements","item","map","to","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}